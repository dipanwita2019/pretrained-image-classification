# USAGE
# python classify_image.py --image images/boat.png

# import the necessary packages
from config import config
from torchvision import models
import numpy as np
import argparse
import torch
import cv2

def preprocess_image(image):
	# swap the color channels from BGR to RGB, resize it, and scale
	# the pixel values to [0, 1] range
	image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
	image = cv2.resize(image, (config.IMAGE_SIZE, config.IMAGE_SIZE))
	image = image.astype("float32") / 255.0

	# subtract ImageNet mean, divide by ImageNet standard deviation,
	# set "channels first" ordering, and add a batch dimension
	image -= config.MEAN
	image /= config.STD
	image = np.transpose(image, (2, 0, 1))
	image = np.expand_dims(image, 0)

	# return the preprocessed image
	return image

# construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-i", "--image", required=True,
	help="path to the input image")
ap.add_argument("-m", "--model", type=str, default="vgg16",
	choices=["vgg16", "vgg19", "inception", "densenet", "resnet"],
	help="name of pre-trained network to use")
args = vars(ap.parse_args())

# define a dictionary that maps model names to their classes
# inside torchvision
MODELS = {
	"vgg16": models.vgg16(pretrained=True),
	"vgg19": models.vgg19(pretrained=True),
	"inception": models.inception_v3(pretrained=True),
	"densenet": models.densenet121(pretrained=True),
	"resnet": models.resnet50(pretrained=True)
}

# load our the network weights from disk, flash it to the current
# device, and set it to evaluation mode
print("[INFO] loading {}...".format(args["model"]))
model = MODELS[args["model"]].to(config.DEVICE)
model.eval()

# load the image from disk, clone it (so we can draw on it later),
# and preprocess it
print("[INFO] loading image...")
image = cv2.imread(args["image"])
orig = image.copy()
image = preprocess_image(image)

# convert the preprocessed image to a torch tensor and flash it to
# the current device
image = torch.from_numpy(image)
image = image.to(config.DEVICE)

# load the preprocessed the ImageNet labels
print("[INFO] loading ImageNet labels...")
imagenetLabels = dict(enumerate(open(config.IN_LABELS)))

# classify the image and extract the predictions
print("[INFO] classifying image with '{}'...".format(args["model"]))
logits = model(image)
probabilities = torch.nn.Softmax(dim=-1)(logits)
sortedProba = torch.argsort(probabilities, dim=-1, descending=True)

# loop over the predictions and display the rank-5 predictions and
# corresponding probabilities to our terminal
for (i, idx) in enumerate(sortedProba[0, :5]):
	print("{}. {}: {:.2f}%".format
		(i, imagenetLabels[idx.item()].strip(),
		probabilities[0, idx.item()] * 100))

# draw the top prediction on the image and display the image to
# our screen
(label, prob) = (imagenetLabels[probabilities.argmax().item()],
	probabilities.max().item())
cv2.putText(orig, "Label: {}, {:.2f}%".format(label.strip(), prob * 100),
	(10, 30), cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0, 0, 255), 2)
cv2.imshow("Classification", orig)
cv2.waitKey(0)

# -- image shape
'''
:arg[[[234 209  75]
  [234 209  75]
  [233 208  74]
  ...
  [112 114  66]
  [ 99 119  62]
  [127 150  91]]

 [[234 209  75]
  [234 209  75]
  [233 208  74]
  ...
  [ 94  97  49]
  [112 130  75]
  [157 179 122]]

 [[233 208  74]
  [234 209  75]
  [234 209  75]
  ...
  [ 83  90  47]
  [134 148  98]
  [166 180 129]]

 ...

 [[191 194 104]
  [204 208 118]
  [206 207 115]
  ...
  [202 192 158]
  [201 191 157]
  [200 191 157]]

 [[171 178  92]
  [192 199 113]
  [204 208 120]
  ...
  [206 198 165]
  [206 198 165]
  [205 197 164]]

 [[141 153  74]
  [160 173  94]
  [174 184 103]
  ...
  [221 212 184]
  [221 212 184]
  [221 213 183]]]

# -- image shape 
(400, 600, 3)

# -- after transposing image shape - making the channels first
(3, 224, 224)

# -- after expanding image size we get 
[[[[-0.83354735 -0.83354735 -0.8164226  ... -0.2684305  -1.9809059
    -0.86779684]
   [-0.83354735 -0.83354735 -0.8164226  ... -0.23418099 -2.1007793
    -0.371179  ]
   [-0.7821731  -0.7821731  -0.74792355 ... -0.01155921 -1.9124068
    -0.73079884]
   ...
   [-0.7992978  -0.73079884 -0.8849216  ...  0.5878073   0.5878073
     0.604932  ]
   [-0.25130573 -0.61092556 -0.71367407 ...  0.6220568   0.5878073
     0.5706825 ]
   [-0.439678   -0.35405427 -0.40542853 ...  1.0159261   0.87892807
     0.89605284]]

  [[ 1.6232493   1.6232493   1.6407564  ...  1.0280113  -1.2303921
     0.22268921]
   [ 1.6232493   1.6232493   1.6407564  ...  0.9929973  -1.30042
     0.62535024]
   [ 1.6407564   1.6407564   1.6757704  ...  1.1680673  -1.1253501
     0.11764706]
   ...
   [ 1.1155463   1.1855743   1.0630252  ...  1.3956584   1.3781513
     1.3956584 ]
   [ 1.4831933   1.1680673   1.1505603  ...  1.3431373   1.3081234
     1.3256303 ]
   [ 1.1155463   1.2556024   1.3081234  ...  1.6757704   1.5182073
     1.5882354 ]]

  [[ 2.2739868   2.2739868   2.2914162  ...  1.3502398  -1.4035729
     0.11276691]
   [ 2.2739868   2.2739868   2.2914162  ...  1.3850982  -1.5604357
     0.6007844 ]
   [ 2.2914162   2.2914162   2.3262744  ...  1.4722441  -1.142135
     0.04305013]
   ...
   [ 1.4722441   1.6291069   1.6116776  ...  1.8556864   1.8382572
     1.820828  ]
   [ 1.6639652   1.4722441   1.5768193  ...  1.7685404   1.733682
     1.7162528 ]
   [ 1.1410894   1.4373858   1.6291069  ...  2.0648367   1.907974
     1.9428324 ]]]]

# image shape is (1, 3, 224, 224)

# labels looks this 
{0: 'tench, Tinca_tinca\n', 1: 'goldfish, 
Carassius_auratus\n', 2: 'great_white_shark, white_shark, man-eater, man-eating_shark, Carcharodon_carcharias\n', 
3: 'tiger_shark, Galeocerdo_cuvieri\n', 4: 'hammerhead, hammerhead_shark\n', 
5: 'electric_ray, crampfish, numbfish, torpedo\n', 6: 'stingray\n',
 7: 'cock\n', 8: 'hen\n', 9: 'ostrich, Struthio_camelus\n', 10: 'brambling, Fringilla_montifringilla\n', 
 11: 'goldfinch, Carduelis_carduelis\n', 12: 'house_finch, linnet, Carpodacus_mexicanus\n', 
 13: 'junco, snowbird\n', 14: 'indigo_bunting, indigo_finch, indigo_bird, Passerina_cyanea\n', 15: 'robin, American_robin, Turdus_migratorius\n', 
 16: 'bulbul\n', 17: 'jay\n', 18: 'magpie\n', 19: 'chickadee\n', 20: 'water_ouzel, dipper\n', 21: 'kite\n'

 # --logits come like this
 tensor([[-4.0891e+00, -5.2554e+00,  1.9382e+00,  2.9585e-01,  2.4259e-02,
          3.5887e-01,  1.6608e+00,  3.8551e+00,  1.2514e+00, -1.1859e+00,
         -1.6280e+00, -3.8891e+00,  8.7951e-02, -2.8734e-01, -3.2572e+00,
         -1.0314e+00, -3.0049e-01, -6.4893e-01,  1.5726e+00, -1.8409e+00,
          1.3552e+00,  4.3140e+00,  8.0395e+00,  6.6134e+00, -1.2496e+00,
         -4.2847e-01, -2.9972e+00, -1.8068e+00, -4.0663e-01, -3.7046e+00,
          9.1911e-01, -4.6460e+00, -3.1025e-01,  4.2914e+00,  5.5753e+00,
          4.9905e+00,  5.5778e+00,  1.5679e+00, -5.2926e-01,  7.3527e+00,
         -7.3183e-01, -1.2696e+00,  1.3479e+00,  4.2055e+00, -5.3760e-01,
         -9.3528e-01, -1.2326e+00, -2.4575e+00, -2.1829e+00,  2.9784e+00,
          8.2580e-01,  2.6936e+00, -5.1472e+00, -4.9424e+00,  1.4782e+00,
         -4.6253e+00, -4.1587e+00, -2.0770e+00,  1.1712e+00, -4.0164e+00,
         -1.7296e-01, -2.6981e-01, -2.0025e+00, -7.6244e-01, -2.6056e+00,
          1.3317e+00, -1.8872e+00, -1.4233e+00, -2.9428e+00, -1.0588e+00,
         -3.8807e+00,  1.9039e+00, -1.1082e+00,  4.8044e-01,  2.4959e+00,
         -3.5114e+00,  1.6985e+00,  1.6747e+00, -1.7736e+00, -1.3515e+00,
          3.5167e+00,  1.0552e+00,  2.5363e+00,  1.2550e+00, -8.6316e-01,
          7.4100e-01,  7.3420e-01, -5.0782e+00, -1.9779e+00, -3.2436e+00,
         -5.2495e+00,  3.1335e+00, -3.2537e+00, -1.5221e+00, -4.2328e+00,
         -5.8526e+00, -1.6392e+00, -1.2508e+00,  7.9224e-01,  1.4367e+00,
          1.8395e+00, -2.6775e-01, -2.4026e+00, -2.4604e+00, -2.9045e+00,
         -3.1475e+00, -3.4051e+00, -8.3732e-01, -3.1806e+00, -2.5399e+00,
         -5.5138e+00, -5.4607e+00,  6.1591e+00,  7.2635e-01, -1.8786e+00,
         -3.2387e+00, -1.7902e+00, -2.5841e+00,  4.6719e+00,  6.2337e+00,
          1.4560e-01,  6.2441e+00,  2.2512e+00,  2.7846e+00,  2.3317e+00,
          3.2420e+00, -2.0249e+00,  3.0675e+00,  6.5137e-01, -1.5712e+00,
         -3.0628e+00,  8.8992e-01,  7.9575e-01,  3.8878e-01, -2.9618e-01,
          2.2719e+00,  2.3483e-01,  2.7696e-01, -3.9140e+00,  4.1203e+00,
         -2.3372e-01, -4.9026e-01,  9.9063e-01,  2.9101e+00,  9.3718e+00,
          6.9975e-01,  1.9728e+00,  4.7295e+00,  3.1422e+00, -5.2243e+00,
          9.8865e+00,  3.4657e-01, -2.7829e+00, -3.1208e+00, -3.5257e+00,
         -2.2400e+00,  1.2580e+00, -2.2266e+00, -5.0546e+00,  3.1085e+00,
         -1.0183e-01,  7.8585e-01, -2.0947e+00, -2.4428e-01, -1.9698e+00,
         -5.5096e-01, -2.1389e+00, -2.2104e+00,  1.1927e+00, -2.6059e+00,
         -5.5660e-01, -1.9011e+00,  7.6639e-01,  3.4084e-01, -2.7020e-01,
         -2.8985e+00, -3.2949e-01, -1.5008e+00,  1.5271e+00,  2.5775e+00,
          9.1952e-02, -5.2585e+00,  1.2705e+00, -2.3796e+00,  2.2227e+00,
          3.4806e+00,  3.3392e+00,  7.5817e-01, -1.5586e+00,  2.9807e-01,
         -2.4205e+00,  1.7501e+00, -7.4960e-01,  2.3620e-01, -4.8115e+00,
          1.8855e+00, -1.5721e+00,  1.1813e+00,  3.6270e-01,  9.8293e-01,
          9.6356e-01, -1.9136e+00,  2.6360e+00,  3.0066e+00,  7.2996e-01,
          3.0643e+00,  2.4738e+00,  2.8306e+00,  4.2648e+00,  5.0595e+00,
         -4.7512e-01,  7.9360e-01, -6.5227e-01,  3.9481e+00,  3.2556e+00,
          1.6181e+00, -1.4402e+00,  3.2528e+00,  3.0890e+00,  1.6653e+00,
          1.8069e+00,  1.9592e+00, -1.4938e+00,  3.3173e+00,  3.8037e+00,
          2.3445e-01, -1.1073e+00,  1.3462e+00, -2.2744e+00, -3.0594e+00,
         -2.2380e+00,  1.1957e+00,  3.3481e+00, -2.2480e+00,  2.4116e+00,
         -4.3588e-01,  9.4326e-01, -1.6341e+00,  1.9916e+00,  1.6533e+00,
          2.8017e+00,  3.5518e+00,  3.1177e+00,  1.2514e+00, -7.7374e-01,
         -9.3075e-01,  6.2648e-01,  4.6788e-01,  1.2724e+00,  1.0047e+00,
          7.7478e-01,  3.4270e+00, -3.0609e+00, -4.3436e-01,  5.4476e-01,
         -5.3354e-01,  5.6129e+00, -1.3996e+00, -5.2219e-01, -1.9066e+00,
         -1.2160e+00, -4.0047e+00,  2.4767e-01,  3.0444e-01,  4.3035e+00,
         -2.2594e+00, -2.7836e+00, -1.0693e+00, -3.2161e+00, -1.3882e+00,
         -3.7987e+00, -4.5938e+00, -2.4544e+00,  1.0409e-01, -3.5319e+00,
         -8.3344e-01, -8.1656e-01, -2.1161e+00, -5.9971e+00, -2.9282e+00,
         -3.0316e+00, -2.1420e+00, -4.4394e-01, -4.3611e+00, -1.8892e+00,
         -2.4623e+00,  3.5010e-01, -3.7881e+00, -1.5790e+00, -5.5884e+00,
         -1.8416e+00, -9.6886e-01,  1.7678e+00, -4.2593e+00,  3.1432e+00,
         -2.8488e-01, -4.3735e-01, -3.9568e+00, -2.1987e+00, -1.8494e+00,
         -9.6949e-01, -2.5450e+00, -1.2473e-01,  1.5642e+00, -1.6687e+00,
          9.6945e-01,  1.9005e+00, -7.8179e-01,  1.1255e+00,  8.8668e-01,
          2.7095e+00,  4.1543e+00,  4.9570e+00,  1.0942e+00,  6.9781e+00,
          2.7502e+00,  1.5100e+00, -4.2300e-01, -3.5733e+00, -6.6011e-01,
         -3.3065e+00,  5.4342e+00, -1.0829e+00, -4.3868e-01, -3.1665e+00,
         -2.4012e+00, -2.8767e-01,  3.0217e+00,  3.3722e+00, -3.4370e-01,
         -3.8708e+00, -4.3500e+00, -7.5790e+00, -4.0562e+00, -2.4352e+00,
         -4.5316e+00, -1.2452e+00,  4.2680e+00, -1.5099e+00, -1.2062e+00,
          7.0217e-01, -2.5496e+00, -5.7434e-01,  5.8395e-01,  1.2767e+00,
          5.2622e+00,  4.0986e+00,  1.2579e+00, -1.5901e+00, -1.2264e+00,
          3.4483e+00, -8.6508e-01, -1.0390e+00, -3.0070e+00,  6.3846e+00,
         -1.6594e-01,  3.0175e+00,  4.4253e+00, -3.1884e+00, -2.4827e+00,
          6.4708e+00, -2.7689e+00, -4.5915e+00, -2.0878e+00, -2.7905e+00,
          4.3697e-01, -3.9346e+00, -1.7063e+00, -4.2907e+00, -1.5767e+00,
         -4.5387e+00, -2.5929e+00,  1.2640e-01,  2.5344e+00,  1.2548e+00,
         -4.2954e-01, -1.9556e+00, -1.4877e+00, -9.0302e-01,  4.6028e-01,
         -3.3751e+00,  1.4210e+00, -3.3395e+00, -3.2160e+00, -5.0006e+00,
          3.1359e-01,  8.3995e-01, -3.3153e+00, -4.0137e+00,  2.0398e-01,
         -5.6398e-01,  1.4401e+00, -3.9934e+00, -4.1144e+00,  3.1913e+00,
          1.3814e+00,  4.2516e+00,  5.3484e-01, -3.9193e+00,  2.8924e+00,
         -3.8268e+00,  7.6244e-01, -1.1406e+00,  6.4594e+00, -2.1204e-01,
         -8.0207e-01, -7.2205e-01,  5.9173e-02,  9.5048e+00,  2.3593e+00,
         -1.4722e-01, -4.7444e+00,  5.7963e+00,  5.7912e+00,  7.2956e-01,
          7.0077e-01, -3.7606e+00,  2.4999e+00, -5.7770e+00, -4.2849e+00,
         -1.0731e+00,  3.2817e+00, -4.4605e+00, -3.3373e+00, -5.2618e+00,
          4.7250e+00, -1.3517e+00,  6.0148e+00,  4.2000e+00, -1.9614e+00,
         -1.8633e+00, -2.3998e+00, -7.6170e-01,  9.0277e-01, -9.2168e-01,
         -4.3106e-01, -5.9785e-01,  7.1174e+00, -1.8624e+00, -4.0454e+00,
          3.3222e+00, -2.6759e-01,  1.1044e+00, -4.5977e+00, -8.8962e-01,
          3.3828e+00, -2.4883e+00,  3.7863e+00,  2.8852e+00,  6.2889e+00,
          1.2069e+00, -1.1641e+00, -2.2307e+00, -1.4448e+00, -1.0293e+00,
          8.1393e-01,  3.2639e+00,  1.0569e+00,  7.9329e-01,  1.0614e+00,
          1.1036e+01, -1.1678e+00,  3.5190e+00,  5.8461e+00, -1.0616e+00,
         -4.2476e-01, -5.1321e+00, -2.1178e-01, -1.0633e+00,  3.5011e+00,
          1.5064e+00,  5.4867e+00,  7.3188e+00, -2.1047e+00, -2.8793e+00,
         -9.5471e-01,  9.6202e-01, -3.5250e+00,  3.3799e+00,  3.8552e-01,
         -4.7165e+00,  1.9818e+00, -1.8468e+00,  5.2120e+00,  4.7937e+00,
         -3.9601e+00, -1.2259e+00,  5.7680e-03,  5.3190e+00,  2.0416e-01,
         -4.5940e+00,  6.3137e+00,  2.6459e+00,  5.5778e-01, -2.7251e-01,
         -2.6896e+00, -4.4677e+00,  1.8707e+00, -1.5759e+00,  7.5799e-01,
          3.7385e+00,  3.1782e+00,  2.5226e+00, -2.7284e+00, -9.9712e-01,
          7.0720e-01,  6.9636e-01, -3.0097e+00, -1.6002e+00, -2.1417e+00,
          6.6492e+00, -2.0645e+00, -2.3442e+00, -2.9867e-01,  4.9994e+00,
          3.8337e+00,  3.4040e+00,  5.7635e+00,  3.9356e-01,  4.0337e+00,
         -1.2743e+00, -3.0255e+00, -2.2700e+00,  1.3005e+00, -3.9060e-01,
          4.3763e+00, -8.3986e-01, -2.2421e+00, -3.4174e+00, -3.6551e-01,
         -1.7818e+00, -2.6886e+00, -1.7582e+00, -4.4919e+00, -4.2942e+00,
         -4.2062e+00,  8.7812e+00,  7.8171e+00,  2.6085e+00, -4.8758e-01,
          5.4371e+00,  6.6712e-01, -1.5042e+00, -1.7624e+00,  4.5871e-01,
         -1.7597e+00, -3.3916e-01, -4.0962e+00, -1.8763e+00, -1.9934e+00,
         -6.6509e+00, -1.4984e+00, -2.2646e+00, -1.2412e+00,  1.5910e+00,
         -3.5599e+00, -2.3688e+00,  1.6882e+00,  1.6810e+00,  2.1968e+00,
         -3.3753e+00,  2.5876e+00,  7.9629e+00, -2.3580e+00, -1.7130e+00,
          4.2503e-02, -2.0593e+00, -3.3821e+00,  2.2284e+00,  5.6912e+00,
          1.5421e+00, -2.4566e+00, -1.0726e+00, -1.5813e+00, -1.2220e+00,
         -1.1203e+00,  5.3580e+00, -2.0179e+00,  1.5304e+00,  2.3355e+00,
         -1.0558e+00, -1.0035e-01,  6.9642e-01,  1.2988e+00, -1.2825e+00,
         -2.2876e+00,  2.4367e+00,  2.0285e+00,  2.7899e+00, -3.4049e+00,
         -4.6221e+00, -4.4709e+00, -2.7504e+00, -1.2741e+00,  4.0337e+00,
          1.0735e+00,  5.1771e+00, -2.3717e+00, -1.2966e+00,  6.9791e-01,
          3.7963e+00,  1.2229e+00, -4.4493e+00,  5.3382e+00,  1.4571e-01,
         -4.9236e-01,  3.8262e+00, -2.6104e+00, -1.3792e-01,  5.6550e+00,
         -2.0753e+00,  2.1798e+00, -1.0718e+00, -2.1199e+00, -2.0573e-01,
         -1.8107e+00,  4.1486e+00, -2.7998e+00,  9.8026e-01, -1.7661e-02,
         -6.2472e-01,  1.4424e+00, -8.2653e-02, -2.4028e+00, -3.2884e+00,
          5.4793e+00, -3.4006e+00, -1.8975e+00,  8.3645e+00, -4.6532e+00,
          1.8686e+00, -3.4227e+00, -1.5248e+00, -1.6590e+00,  3.9346e+00,
         -1.6223e+00,  9.3848e-01, -1.3293e+00,  2.6691e+00,  2.1683e+00,
         -2.4008e+00, -1.4533e+00,  3.4770e+00,  2.1973e+00,  1.6167e+00,
         -4.6427e-01,  5.9824e+00, -2.6048e+00, -4.9898e+00,  1.8117e+00,
         -3.9121e+00, -4.0133e+00,  3.5147e+00,  6.2914e-01, -8.0201e-01,
         -1.4386e+00,  2.1910e+00,  9.7330e-01, -4.4171e+00,  2.6731e-01,
          1.5535e+00, -3.9644e+00, -4.3262e+00,  2.9758e+00,  3.5872e-01,
          1.0137e+00,  4.3643e+00, -4.6827e-01, -7.3654e-01, -2.0499e+00,
         -1.1364e+00,  1.4424e+00,  5.5458e+00, -6.0760e+00, -7.7189e-01,
         -2.6660e+00,  2.2816e+00,  6.8012e+00, -1.8317e-02, -1.5762e+00,
         -7.3798e+00, -1.5865e+00,  1.2300e+00, -4.1410e-01, -2.9959e+00,
         -6.2124e+00, -4.4921e+00, -3.3538e+00, -3.7547e+00, -1.6379e+00,
          3.7901e+00, -1.7638e+00, -9.1021e-01,  7.8773e+00,  4.8683e+00,
          3.2514e+00,  6.5758e+00, -4.8940e+00,  4.5702e+00,  3.3932e+00,
         -3.5590e+00,  5.1680e+00, -3.9220e+00,  5.4905e+00, -7.8687e-02,
         -4.1477e+00,  1.7660e+00, -3.5345e+00,  1.6780e+00, -2.6349e+00,
          3.2864e+00, -1.2608e+00, -5.5049e+00, -1.9558e+00, -4.9775e+00,
         -3.1415e+00,  2.5632e+00,  1.8396e+00,  7.6965e+00,  3.5143e-01,
         -4.1643e+00, -1.8372e+00, -3.4710e+00, -1.7060e+00,  1.1669e+01,
         -1.8538e-01,  4.2661e-01,  1.8074e+00,  3.1671e+00, -3.7954e+00,
          6.9722e+00, -1.0944e+00, -2.4361e+00,  3.4895e+00, -2.2631e+00,
          6.6790e-01, -3.5369e-03,  8.9941e-01,  3.0986e+00, -4.4292e-01,
         -8.1965e-01, -4.3212e-01, -8.0239e-01, -1.5128e+00,  1.6041e+00,
         -3.2637e+00, -1.7362e+00, -3.3904e+00, -2.0705e-01,  2.4126e+00,
         -4.6020e-01, -2.6295e+00, -7.0070e-01,  4.9450e-01, -5.2062e-01,
          1.9289e+00,  1.6217e+00, -3.9854e-03,  3.6808e+00, -7.1911e-01,
         -6.5819e-01, -3.2054e+00, -3.7040e-01, -2.4455e+00,  4.5451e+00,
          2.3150e+00, -2.0426e+00, -3.4081e+00, -3.6477e-01,  1.0122e+00,
          3.7811e+00, -1.2751e+00, -3.3922e+00, -1.5400e+00,  2.8435e+00,
          4.2776e+00,  2.6732e+00, -2.9691e+00, -1.0453e+00, -7.5079e-01,
          8.6972e+00, -1.3285e+00,  1.1334e+00,  4.0872e+00, -6.3423e-01,
         -2.7587e+00, -1.3891e+00,  8.3850e-01,  1.1225e+00, -2.7851e+00,
          2.2133e+00,  8.3225e-01,  6.3620e+00, -1.3871e+00, -2.5387e+00,
          4.2201e+00,  6.0429e-01, -4.0296e-01, -6.7913e+00, -2.6477e+00,
         -4.3258e+00,  6.4822e+00,  4.8177e+00,  4.2976e+00, -5.2254e+00,
          2.8413e+00, -1.3072e+00,  1.4016e+00,  3.5402e+00, -9.4178e-01,
         -2.9327e+00, -4.4791e+00, -2.2028e+00,  1.9058e+00,  2.5312e+00,
         -8.6229e-01, -4.4496e+00, -4.5762e+00,  2.9291e-01,  1.6233e+00,
         -5.9495e+00,  1.5034e+00,  2.6235e-01, -2.4639e+00,  8.3152e-02,
          1.7860e+00, -8.6286e-01, -1.0420e+00, -2.3227e+00, -6.4267e-02,
          3.0821e+00, -2.0712e-01,  4.4494e+00,  4.9501e+00, -3.3608e-01,
          6.2021e+00,  4.9169e+00,  3.0365e+00,  1.7401e+00,  2.4626e+00,
          2.1963e+00, -1.0936e+00,  4.0227e+00,  4.2362e+00, -2.6531e+00,
         -2.6544e+00, -1.6485e+00,  4.6225e+00, -3.7583e+00,  1.5955e+00,
          1.1286e+00,  1.2125e+00,  1.2812e+00,  4.7565e+00, -5.9464e-01,
         -2.3886e+00,  1.6864e+00, -9.0188e-01,  6.9757e+00, -1.0119e+00,
         -3.5539e+00, -2.7808e-01,  4.1377e+00,  1.5429e+00,  2.2832e+00,
         -2.1287e+00,  4.0042e+00, -2.3667e-01,  1.0011e+00,  9.1223e-02,
          1.7813e+00,  2.5380e+00,  4.9705e+00,  1.2479e+00, -4.5883e+00,
          1.4443e-01,  2.9990e+00, -5.6752e+00, -8.3778e-01,  5.1894e+00,
          7.7093e-01, -1.0195e+00,  7.4857e-01,  5.1533e-01, -5.8016e-01,
         -2.8121e+00, -5.3640e+00, -2.5158e+00, -1.5086e+00,  1.1273e+00,
         -1.2808e-01, -1.5467e+00,  1.0757e+00, -7.3090e-01, -6.4090e-01,
          3.3805e+00, -4.5166e+00, -1.8366e+00,  1.5986e+00,  1.6652e+00,
         -2.8020e-01, -4.2330e+00, -2.9757e+00, -1.8293e+00, -3.2909e+00,
         -3.4745e+00, -7.1721e+00, -5.1056e-01,  2.3797e+00, -2.8428e+00,
          1.0229e+00, -2.9126e+00,  3.8309e+00,  2.3315e+01,  4.3140e+00,
          6.2023e+00,  2.9357e+00, -4.9872e-01, -2.6261e+00, -2.1648e+00,
         -3.4133e+00,  1.8582e+00, -2.2584e+00, -1.4055e+00,  2.7575e-01,
         -4.9137e+00, -6.6175e+00,  9.3462e-01,  1.3826e+00, -1.1352e+00,
         -3.3757e+00, -2.4563e+00,  1.4594e-01, -4.3903e+00, -5.0939e+00,
         -3.5145e+00, -2.3416e+00, -3.7418e+00, -2.3714e+00, -3.3809e+00,
         -4.8280e+00, -2.3410e+00, -4.3978e+00, -2.2961e+00,  1.1409e+00,
         -6.9728e+00, -1.3965e+00,  7.4472e-01, -1.7339e+00, -3.6183e+00,
         -5.1370e-01, -2.2554e+00, -1.7079e+00,  1.1935e-01,  2.8693e+00,
         -4.4933e+00, -3.3955e+00, -3.1521e+00,  2.9876e+00, -4.9638e+00,
          4.9721e+00, -2.5951e+00, -1.8752e+00, -4.3964e+00, -3.5257e+00,
         -1.1518e+00, -1.9039e+00, -2.2479e+00,  2.5956e+00, -2.6925e+00,
          3.6792e+00,  7.3946e-01,  9.3693e+00,  2.9091e+00,  1.3380e-01,
          9.5535e+00,  8.7518e+00,  9.7878e+00,  1.3776e+01,  5.4178e+00,
          2.6828e+00, -1.4900e+00,  1.2867e-01,  7.2974e+00,  1.8988e+00,
         -4.1018e+00, -6.0445e+00,  3.2049e+00,  2.8448e+00, -9.9022e-01,
          2.3437e+00,  8.7955e-01, -1.8259e+00, -7.8023e-01, -4.1793e-01,
          1.8226e+00,  6.3636e-01, -2.0101e+00,  1.3863e-01, -9.3935e-01]],
       grad_fn=<AddmmBackward>)

--logits shape 
torch.Size([1, 1000])

-- probabilities shape :
torch.Size([1, 1000])

--sortedprobabilities 
tensor([[913, 978, 724, 460, 150, 977, 975, 408, 144, 972, 536, 976, 780, 628,
          22, 562, 693, 537, 718,  39, 472, 983, 437, 314, 858, 730, 677, 510,
          23, 696, 801, 360, 403, 354, 792, 491, 449, 121, 119, 915, 835, 112,
         427, 646, 463, 412, 413, 517, 569, 609, 256,  36,  34, 672, 703, 471,
         625, 540, 321, 979, 576, 603, 488, 345, 483, 879, 596, 701, 209, 514,
          35, 960, 872, 312, 833, 836, 694, 802, 484, 853, 147, 425, 118, 847,
         698, 764, 832, 357, 525, 666,  21, 914, 264, 803,  33, 775, 337, 208,
         396, 843, 795,  43, 428, 311, 616, 862, 139, 346, 783, 519, 594, 842,
         866, 213, 634,   7, 515, 912, 606, 224, 600, 690, 447, 770, 500, 758,
         970, 241, 808, 462,  80, 652, 469, 733, 185, 642, 350, 251, 516, 699,
         445, 895, 478, 328, 232, 186, 440, 223, 710, 421, 456, 214, 217, 695,
         125, 987, 394, 501, 728, 294, 148,  91, 242, 159, 738, 218, 830, 127,
         205, 837, 327, 356, 203, 876, 958,  49, 663, 916, 143, 973, 399, 448,
         954, 988, 774, 805, 207, 240, 588, 123, 315, 310,  51, 980, 776, 638,
         492, 202, 538, 968, 561, 179, 716, 871,  82, 373, 814, 502, 417,  74,
         206, 839, 586, 749, 234, 908, 409, 990, 579, 124, 765, 864, 676, 135,
         122, 568, 184, 790, 643, 559, 840, 656, 611, 639, 587, 238, 481, 146,
         221,   2, 755, 813,  71, 306, 984, 195, 497, 630, 921, 717, 100, 995,
         649, 727, 220, 825, 870, 292, 706, 191, 838,  76, 557, 856, 558, 708,
          77, 219, 899,   6, 239, 819, 756, 215, 644, 744, 898, 849, 554,  18,
          37, 303, 660, 863, 570, 578, 178, 316, 470, 821,  54, 671, 621, 391,
          99, 381, 807, 928, 395,  20,  42, 227,  65, 523, 583, 852, 344, 248,
         182, 156, 347,  83, 374, 243,   8, 873, 682, 601, 851, 450, 231, 168,
         197,  58, 944, 782, 850, 889, 308, 788, 442, 313, 892, 595, 459, 457,
          81, 910, 665, 769, 249, 868, 142, 199, 618, 657, 305, 200, 476, 236,
         636, 927,  30, 433, 737, 131, 309, 991, 386, 787, 791,  50, 455, 132,
         211, 458,  98, 161, 250, 880, 172, 401, 187, 499, 882, 947,  85, 971,
          86, 204, 414, 113, 505, 340, 415, 145, 599, 582, 506, 735, 541, 128,
         996, 653, 246, 796, 343, 493, 254, 397, 883, 753,  73, 247, 379, 544,
         365, 726, 518, 133, 479, 198,   5, 664, 719, 286, 151, 173, 385, 263,
         189,   3, 818, 137, 924, 659, 822, 262, 193, 136, 225, 489, 389, 932,
         604, 120, 875, 998, 974, 982, 372, 953, 273, 180, 869,  12, 824, 407,
         565,   4, 487, 736, 757, 619, 678, 829, 704, 622, 581, 160, 302, 890,
         608, 410, 355,  60, 725, 614, 748, 831, 467, 404, 140, 867, 163, 441,
         101,  61, 174, 494, 861, 900, 295,  13, 326, 134, 513,  16,  32, 176,
         834, 546, 329, 768, 529, 762, 524, 797,  28, 683, 994, 317, 465,  25,
         375, 435, 741, 253, 235, 296, 323, 739, 282, 750, 645, 667, 210, 539,
         141, 605, 917, 907, 950, 754, 258,  38, 255,  44, 165, 170, 390, 342,
         884, 854, 436, 620, 784, 894,  17, 212, 760, 319, 752, 759, 406, 893,
          40, 668, 192, 779, 432,  63, 674, 244, 993, 307, 654, 405, 742, 276,
         740, 275, 107, 878, 526, 815, 826,  84, 351, 444, 857, 378, 692, 434,
         245,  45, 999, 809, 475, 291, 300, 989, 504, 859, 881, 454,  15, 352,
         827, 778, 580,  69, 464, 468, 267, 612, 572, 420, 322, 841, 731, 226,
          72, 575, 929, 670, 402, 965, 451, 461,   9, 339, 260, 574, 486, 349,
          46, 553, 336,  24,  97, 711,  41, 593, 520, 771, 584, 598, 806, 781,
         637,  79, 426, 793, 269, 786, 946, 257, 923,  67, 655, 216, 453, 641,
         377, 981, 222, 551, 177, 542, 888, 338, 743,  93, 632, 773, 891, 188,
         129, 196, 498, 679, 369, 288, 573, 681, 348, 508, 635,  10, 237, 689,
          96, 846, 633, 304, 723, 367, 952, 564, 948, 746, 532, 545, 543, 691,
          78, 530, 116,  27, 615, 992, 903, 897, 721,  19, 290, 482, 299, 438,
         430, 962, 548, 114,  66, 284, 627, 171, 966, 259, 201, 376, 713, 429,
         164,  88, 549,  62, 997, 577, 126, 766, 669, 566, 511, 610,  57, 363,
         162, 473, 277, 613, 865, 166, 509, 281, 919,  48, 298, 812, 167, 157,
         452, 230, 155, 527, 967, 233, 951, 922, 265, 734, 552, 522, 228, 585,
         943, 828, 941, 936, 512, 563, 556, 938, 597, 183, 855, 431, 640, 325,
         102, 623, 190, 334, 732, 763, 272, 931, 571,  47, 103, 285, 823, 359,
         446, 887, 794, 109, 301, 341, 117, 371, 961, 647,  64, 169, 607, 918,
         751, 709, 799, 844, 845, 675, 531, 495, 969, 503, 592, 785, 361, 152,
         266, 789, 364, 617, 885, 909, 474, 175, 104, 911, 279, 810,  68, 777,
         902, 684,  26, 353, 507, 521, 280, 229, 252, 130, 153, 715, 105, 957,
         324, 108, 358, 761, 383, 268, 115,  89,  92,  14, 745, 624, 904, 320,
         387, 423, 382, 687, 380, 560, 930, 939, 567, 747, 772, 956, 626, 589,
         106, 767, 920, 528, 631, 722, 905,  75, 935, 477, 964, 154, 274, 707,
         860, 700, 555, 318, 949,  29, 937, 688, 848, 416, 287, 729, 270, 400,
         330,  70,  11, 650, 138, 398, 702, 366, 297, 485, 661, 392, 261, 651,
         388,  59, 439, 333,   0, 547, 985, 393, 705,  56, 720, 535,  94, 901,
         293, 419, 368, 534, 800, 662, 331, 283, 933, 963, 942, 658, 602, 816,
         422, 496, 591, 811, 533, 686, 955, 896, 335, 370, 817, 874, 362, 271,
         490, 443, 590,  55,  31, 629, 480, 411, 194, 940, 697, 925,  53, 959,
         714, 648, 384, 158,  87, 934, 466,  52, 149, 804,  90,   1, 181, 424,
         886, 111, 712, 110, 289, 877, 418,  95, 820, 278, 986, 673, 685, 926,
         550, 798, 945, 906, 680, 332]])
'''

